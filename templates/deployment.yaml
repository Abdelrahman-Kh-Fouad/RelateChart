apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    name: postgres
spec:
  replicas: {{.Values.replicaCount}}
  selector:
    matchLabels:
      service: postgres
  template:
    metadata:
      labels:
        service: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          imagePullPolicy: IfNotPresent
          env:
            - name : POSTGRES_USER
              value: {{.Values.postgresql.postgresqlUsername}}
            - name: POSTGRES_PASSWORD
              value: {{.Values.postgresql.postgresqlPassword}}
            - name: POSTGRES_DB
              value: relate
              
          volumeMounts:
            - name: postgres-volume-mount
              mountPath: /var/lib/postgres/data

      volumes:
      - name: postgres-volume-mount
        persistentVolumeClaim:
          claimName: postgres-pvc
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: relate
  labels:
    name: relate
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: relate
  template:
    metadata:
      labels:
        app: relate

    spec:
      containers:
        - name: relate
          image: abdelrahmankh/relate:v3
          command: ['/bin/bash', 'entrypoint.sh'] # runs migrations and starts the server
          env:
            - name: POSTGRES_USER
              value: {{.Values.postgresql.postgresqlUsername}}
            - name: POSTGRES_PASSWORD
              value: {{.Values.postgresql.postgresqlPassword}}
            - name: POSTGRES_HOST
              value: postgres
     
          resources:
            limits:
              cpu: 100m 
              memory: 300Mi
            requests:
              cpu: 100m 
              memory: 300Mi
        
          imagePullPolicy: IfNotPresent
        
          
      restartPolicy: Always
 
